version: '3.8'

services:
  medical-rag:
    build: .
    container_name: medical-rag-api
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4
      - OPENAI_TEMPERATURE=0.1
      - OPENAI_MAX_TOKENS=1000
      - CHROMA_DB_PATH=./data/vector_db
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - RAGAS_CACHE_DIR=./ragas_cache
      - RAGAS_EVALUATION_BATCH_SIZE=10
      - RAGAS_FAITHFULNESS_THRESHOLD=0.90
      - RAGAS_CONTEXT_PRECISION_THRESHOLD=0.85
      - RAGAS_CONTEXT_RECALL_THRESHOLD=0.80
      - RAGAS_ANSWER_RELEVANCY_THRESHOLD=0.85
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_WORKERS=4
      - API_RELOAD=false
      - MAX_DOCUMENT_SIZE=50MB
      - SUPPORTED_FORMATS=pdf,docx,txt
      - CHUNK_SIZE=1000
      - CHUNK_OVERLAP=200
      - LOG_LEVEL=INFO
      - METRICS_PORT=9090
      - ENABLE_PROMETHEUS=true
      - ENABLE_SAFETY_FILTER=true
      - MEDICAL_SAFETY_THRESHOLD=0.95
      - BLOCKED_TERMS_FILE=./data/blocked_terms.txt
      - MAX_CONCURRENT_REQUESTS=10
      - REQUEST_TIMEOUT=30
      - VECTOR_SEARCH_TOP_K=5
      - UPLOAD_DIR=./data/uploads
      - PROCESSED_DIR=./data/processed
      - EVALUATION_RESULTS_DIR=./evaluation_results
      - DEBUG=false
      - ENVIRONMENT=production
    volumes:
      - ./data:/app/data
      - ./evaluation_results:/app/evaluation_results
      - ./ragas_cache:/app/ragas_cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: medical-rag-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: medical-rag-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data: 